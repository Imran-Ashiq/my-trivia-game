{"version":3,"file":"static/js/344.d90a0483.chunk.js","mappings":"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","sources":["components/Achievements.js","components/Leaderboard.js","utils/scoreUtils.js","components/ResultScreen.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 20px;\r\n  background-color: #f0f0f0;\r\n  font-family: Arial, sans-serif;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 2em;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst AchievementList = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  width: 100%;\r\n  max-width: 400px;\r\n`;\r\n\r\nconst AchievementItem = styled.li`\r\n  background: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Achievements = () => {\r\n  const achievements = JSON.parse(localStorage.getItem('achievements')) || [];\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Achievements</Title>\r\n      <AchievementList>\r\n        {achievements.map((achievement, index) => (\r\n          <AchievementItem key={index}>\r\n            <span>{achievement.name}</span>\r\n            <span>{achievement.date}</span>\r\n          </AchievementItem>\r\n        ))}\r\n      </AchievementList>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Achievements;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { getScores } from '../utils/scoreUtils';\r\n\r\nconst Container = styled.div`\r\n  background-color: ${props => props.theme.background};\r\n  color: ${props => props.theme.color};\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 2em;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ScoreList = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  width: 100%;\r\n  max-width: 400px;\r\n`;\r\n\r\nconst ScoreItem = styled.li`\r\n  background: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  transition: background 0.3s;\r\n  margin-top: 20px;\r\n\r\n  &:hover {\r\n    background: #0056b3;\r\n  }\r\n`;\r\n\r\nconst Leaderboard = () => {\r\n  const scores = getScores();\r\n\r\n  const shareLeaderboard = () => {\r\n    const url = `https://your-game-url.com/leaderboard`;\r\n    window.open(`https://twitter.com/intent/tweet?text=Check out the leaderboard for the Trivia Game! ${url}`, '_blank');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Leaderboard</Title>\r\n      <ScoreList>\r\n        {scores.map((score, index) => (\r\n          <ScoreItem key={index}>\r\n            <span>Player {index + 1}</span>\r\n            <span>{score}</span>\r\n          </ScoreItem>\r\n        ))}\r\n      </ScoreList>\r\n      <Button onClick={shareLeaderboard}>Share Leaderboard</Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Leaderboard;","export const saveScore = (score) => {\r\n    const scores = JSON.parse(localStorage.getItem('scores')) || [];\r\n    scores.push(score);\r\n    scores.sort((a, b) => b - a);\r\n    localStorage.setItem('scores', JSON.stringify(scores.slice(0, 10)));\r\n  };\r\n  \r\n  export const getScores = () => {\r\n    return JSON.parse(localStorage.getItem('scores')) || [];\r\n  };","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Leaderboard from './Leaderboard';\r\nimport Achievements from './Achievements';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  background-color: ${props => props.theme.background};\r\n  color: ${props => props.theme.color};\r\n  font-family: Arial, sans-serif;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2.5em;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ScoreText = styled.p`\r\n  font-size: 1.5em;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  transition: background 0.3s;\r\n  margin-top: 20px;\r\n\r\n  &:hover {\r\n    background: #0056b3;\r\n  }\r\n`;\r\n\r\nconst ResultScreen = ({ score, playAgain }) => {\r\n  const shareScore = () => {\r\n    const url = `https://twitter.com/intent/tweet?text=I scored ${score} points in the Trivia Game! Can you beat my score?`;\r\n    window.open(url, '_blank');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Game Over</Title>\r\n      <ScoreText>Your final score is: {score}</ScoreText>\r\n      <Button onClick={playAgain}>Play Again</Button>\r\n      <Button onClick={shareScore}>Share Score</Button>\r\n      <Leaderboard />\r\n      <Achievements />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ResultScreen;"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Title","h2","_templateObject2","AchievementList","ul","_templateObject3","AchievementItem","li","_templateObject4","Achievements","achievements","JSON","parse","localStorage","getItem","_jsxs","children","_jsx","map","achievement","index","name","date","props","theme","background","color","ScoreList","ScoreItem","Button","button","_templateObject5","Leaderboard","scores","score","onClick","shareLeaderboard","window","open","concat","h1","ScoreText","p","_ref","playAgain","shareScore","url"],"sourceRoot":""}