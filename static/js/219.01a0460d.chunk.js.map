{"version":3,"file":"static/js/219.01a0460d.chunk.js","mappings":"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","sources":["../node_modules/react-spinners/esm/helpers/unitConverter.js","../node_modules/react-spinners/esm/helpers/animation.js","../node_modules/react-spinners/esm/ClipLoader.js","../node_modules/use-sound/src/index.ts","../node_modules/use-sound/src/use-on-mount.ts","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["var cssUnit = {\n    cm: true,\n    mm: true,\n    in: true,\n    px: true,\n    pt: true,\n    pc: true,\n    em: true,\n    ex: true,\n    ch: true,\n    rem: true,\n    vw: true,\n    vh: true,\n    vmin: true,\n    vmax: true,\n    \"%\": true,\n};\n/**\n * If size is a number, append px to the value as default unit.\n * If size is a string, validate against list of valid units.\n * If unit is valid, return size as is.\n * If unit is invalid, console warn issue, replace with px as the unit.\n *\n * @param {(number | string)} size\n * @return {LengthObject} LengthObject\n */\nexport function parseLengthAndUnit(size) {\n    if (typeof size === \"number\") {\n        return {\n            value: size,\n            unit: \"px\",\n        };\n    }\n    var value;\n    var valueString = (size.match(/^[0-9.]*/) || \"\").toString();\n    if (valueString.includes(\".\")) {\n        value = parseFloat(valueString);\n    }\n    else {\n        value = parseInt(valueString, 10);\n    }\n    var unit = (size.match(/[^0-9]*$/) || \"\").toString();\n    if (cssUnit[unit]) {\n        return {\n            value: value,\n            unit: unit,\n        };\n    }\n    console.warn(\"React Spinners: \".concat(size, \" is not a valid css value. Defaulting to \").concat(value, \"px.\"));\n    return {\n        value: value,\n        unit: \"px\",\n    };\n}\n/**\n * Take value as an input and return valid css value\n *\n * @param {(number | string)} value\n * @return {string} valid css value\n */\nexport function cssValue(value) {\n    var lengthWithunit = parseLengthAndUnit(value);\n    return \"\".concat(lengthWithunit.value).concat(lengthWithunit.unit);\n}\n","export var createAnimation = function (loaderName, frames, suffix) {\n    var animationName = \"react-spinners-\".concat(loaderName, \"-\").concat(suffix);\n    if (typeof window == \"undefined\" || !window.document) {\n        return animationName;\n    }\n    var styleEl = document.createElement(\"style\");\n    document.head.appendChild(styleEl);\n    var styleSheet = styleEl.sheet;\n    var keyFrames = \"\\n    @keyframes \".concat(animationName, \" {\\n      \").concat(frames, \"\\n    }\\n  \");\n    if (styleSheet) {\n        styleSheet.insertRule(keyFrames, 0);\n    }\n    return animationName;\n};\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { cssValue } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nvar clip = createAnimation(\"ClipLoader\", \"0% {transform: rotate(0deg) scale(1)} 50% {transform: rotate(180deg) scale(0.8)} 100% {transform: rotate(360deg) scale(1)}\", \"clip\");\nfunction ClipLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 35 : _f, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"size\"]);\n    var style = __assign({ background: \"transparent !important\", width: cssValue(size), height: cssValue(size), borderRadius: \"100%\", border: \"2px solid\", borderTopColor: color, borderBottomColor: \"transparent\", borderLeftColor: color, borderRightColor: color, display: \"inline-block\", animation: \"\".concat(clip, \" \").concat(0.75 / speedMultiplier, \"s 0s infinite linear\"), animationFillMode: \"both\" }, cssOverride);\n    if (!loading) {\n        return null;\n    }\n    return React.createElement(\"span\", __assign({ style: style }, additionalprops));\n}\nexport default ClipLoader;\n","import React from 'react';\n\nimport useOnMount from './use-on-mount';\n\nimport { HookOptions, PlayOptions, PlayFunction, ReturnedValue } from './types';\n\nexport default function useSound<T = any>(\n  src: string | string[],\n  {\n    id,\n    volume = 1,\n    playbackRate = 1,\n    soundEnabled = true,\n    interrupt = false,\n    onload,\n    ...delegated\n  }: HookOptions<T> = {} as HookOptions\n) {\n  const HowlConstructor = React.useRef<HowlStatic | null>(null);\n  const isMounted = React.useRef(false);\n\n  const [duration, setDuration] = React.useState<number | null>(null);\n\n  const [sound, setSound] = React.useState<Howl | null>(null);\n\n  const handleLoad = function() {\n    if (typeof onload === 'function') {\n      // @ts-ignore\n      onload.call(this);\n    }\n\n    if (isMounted.current) {\n      // @ts-ignore\n      setDuration(this.duration() * 1000);\n    }\n\n    // @ts-ignore\n    setSound(this);\n  };\n\n  // We want to lazy-load Howler, since sounds can't play on load anyway.\n  useOnMount(() => {\n    import('howler').then(mod => {\n      if (!isMounted.current) {\n        // Depending on the module system used, `mod` might hold\n        // the export directly, or it might be under `default`.\n        HowlConstructor.current = mod.Howl ?? mod.default.Howl;\n\n        isMounted.current = true;\n\n        new HowlConstructor.current({\n          src: Array.isArray(src) ? src : [src],\n          volume,\n          rate: playbackRate,\n          onload: handleLoad,\n          ...delegated,\n        });\n      }\n    });\n\n    return () => {\n      isMounted.current = false;\n    };\n  });\n\n  // When the `src` changes, we have to do a whole thing where we recreate\n  // the Howl instance. This is because Howler doesn't expose a way to\n  // tweak the sound\n  React.useEffect(() => {\n    if (HowlConstructor.current && sound) {\n      setSound(\n        new HowlConstructor.current({\n          src: Array.isArray(src) ? src : [src],\n          volume,\n          onload: handleLoad,\n          ...delegated,\n        })\n      );\n    }\n    // The linter wants to run this effect whenever ANYTHING changes,\n    // but very specifically I only want to recreate the Howl instance\n    // when the `src` changes. Other changes should have no effect.\n    // Passing array to the useEffect dependencies list will result in\n    // ifinite loop so we need to stringify it, for more details check\n    // https://github.com/facebook/react/issues/14476#issuecomment-471199055\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [JSON.stringify(src)]);\n\n  // Whenever volume/playbackRate are changed, change those properties\n  // on the sound instance.\n  React.useEffect(() => {\n    if (sound) {\n      sound.volume(volume);\n      sound.rate(playbackRate);\n    }\n    // A weird bug means that including the `sound` here can trigger an\n    // error on unmount, where the state loses track of the sprites??\n    // No idea, but anyway I don't need to re-run this if only the `sound`\n    // changes.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [volume, playbackRate]);\n\n  const play: PlayFunction = React.useCallback(\n    (options?: PlayOptions) => {\n      if (typeof options === 'undefined') {\n        options = {};\n      }\n\n      if (!sound || (!soundEnabled && !options.forceSoundEnabled)) {\n        return;\n      }\n\n      if (interrupt) {\n        sound.stop();\n      }\n\n      if (options.playbackRate) {\n        sound.rate(options.playbackRate);\n      }\n\n      sound.play(options.id);\n    },\n    [sound, soundEnabled, interrupt]\n  );\n\n  const stop = React.useCallback(\n    id => {\n      if (!sound) {\n        return;\n      }\n      sound.stop(id);\n    },\n    [sound]\n  );\n\n  const pause = React.useCallback(\n    id => {\n      if (!sound) {\n        return;\n      }\n      sound.pause(id);\n    },\n    [sound]\n  );\n\n  const returnedValue: ReturnedValue = [\n    play,\n    {\n      sound,\n      stop,\n      pause,\n      duration,\n    },\n  ];\n\n  return returnedValue;\n}\n\nexport { useSound };\n","import * as React from 'react';\n\nexport default function useOnMount(callback: React.EffectCallback) {\n  React.useEffect(callback, []);\n}\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","const noop = (any) => any;\n\nexport { noop };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from '../../../../utils/progress.mjs';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { generateLinearEasing } from '../../animators/waapi/utils/linear.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 * clamp(0.05, 1, 1 - options.bounce) * Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant, noop } from 'motion-utils';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { invariant, noop } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from 'motion-utils';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from 'motion-utils';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.15.0\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (!onHoverEnd || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return focusableElements.has(element.tagName) || element.tabIndex !== -1;\n}\n\nexport { isElementKeyboardAccessible };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (onPressEnd) {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element)) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from 'motion-dom';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from 'motion-utils';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from 'motion-utils';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from 'motion-utils';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.15.0\", `Attempting to mix Motion versions ${nextValue.version} with 11.15.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["cssUnit","cm","mm","in","px","pt","pc","em","ex","ch","rem","vw","vh","vmin","vmax","cssValue","value","lengthWithunit","size","unit","valueString","match","toString","includes","parseFloat","parseInt","console","warn","concat","parseLengthAndUnit","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","clip","loaderName","frames","suffix","animationName","window","document","styleEl","createElement","head","appendChild","styleSheet","sheet","keyFrames","insertRule","createAnimation","_a","_b","loading","_c","color","_d","speedMultiplier","_e","cssOverride","_f","additionalprops","style","background","width","height","borderRadius","border","borderTopColor","borderBottomColor","borderLeftColor","borderRightColor","display","animation","animationFillMode","React","src","_temp","callback","_ref$volume","_ref","volume","_ref$playbackRate","playbackRate","_ref$soundEnabled","soundEnabled","_ref$interrupt","interrupt","onload","delegated","_objectWithoutPropertiesLoose","_excluded","HowlConstructor","React__default","isMounted","_React$useState","duration","setDuration","_React$useState2","sound","setSound","handleLoad","current","then","mod","_mod$Howl","Howl","_extends","Array","isArray","rate","useEffect","JSON","stringify","play","options","forceSoundEnabled","stop","id","pause","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","get","_target","key","has","set","isAnimationControls","v","start","isKeyframesTarget","shallowCompare","next","prev","prevLength","isVariantLabel","getValueState","visualElement","state","values","forEach","getVelocity","resolveVariantFromProps","props","definition","custom","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","Set","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","ease","getDefaultTransition","valueKey","keyframes","startsWith","Math","sqrt","getValueTransition","transition","MotionGlobalConfig","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","index","noop","any","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","step","schedule","queue","add","cancel","delete","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","max","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","test","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","splitCSSVariableRegex","getVariableValue","element","depth","fallback","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","clamp","number","parse","transform","alpha","_objectSpread","scale","default","createUnitType","endsWith","degrees","percent","progressPercentage","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref2","_ref3","paddingLeft","paddingRight","_ref4","_ref5","y","paddingTop","paddingBottom","top","_ref6","left","_ref7","bottom","_ref8","_ref9","right","_ref10","_ref11","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","getValue","push","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","name","motionValue","isAsync","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","hsla","hue","saturation","lightness","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","numberValueTypes","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","clearTime","time","newTime","queueMicrotask","isAnimatable","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","BaseAnimation","autoplay","delay","repeatDelay","_objectWithoutProperties","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","resolve","reject","currentFinishedPromise","flatten","Promise","progress","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","springDefaults","mass","bounce","visualDuration","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","rootIterations","approximateRoot","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","_len","transformers","_key","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","memo","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","animate","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","attachTimeline","timeline","onfinish","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","owner","_this$options","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playState","_this$options2","_excluded2","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","subscriptions","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","addUniqueItem","item","removeItem","SubscriptionManager","handler","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","isMotionValue","addValueToWillChange","willChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","setupGesture","elementOrSelector","elements","scope","selectorCache","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","filterEvents","event","pointerType","isPrimaryPointer","button","isPrimary","isPressing","firePointerEvent","dispatchEvent","PointerEvent","bubbles","focusableElements","isNodeOrChild","parentElement","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","tagName","tabIndex","isElementKeyboardAccessible","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","extractEventInfo","point","pageX","pageY","addDomEvent","addPointerEvent","addPointerInfo","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useCallback","usePresence","jsx","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","children","isDirty","resolveMotionValue","unwrappedValue","toValue","timeout","checkElapsed","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","MotionConfigContext","isStatic","reducedMotion","MotionContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","useMotionRef","externalRef","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","layoutGroupId","lowercaseSVGElements","isSVGComponent","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","baseConfig","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","createDomVisualElement","motion"],"sourceRoot":""}